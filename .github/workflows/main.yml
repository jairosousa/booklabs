# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Continuos Integrations with GitHub Action

on:
  pull_request:
    branches: [ "main" ]
    types: [ closed ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres_db:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: bookdb
        ports:
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'
        cache: maven

    - name: Build with Maven
      working-directory: .
      run: mvn clean package

    - name: Docker Compose Build
      working-directory: .
      run: docker compose build

  deploy-prod:
    runs-on: ubuntu-latest
    environment:
      name: prod
      url: "http://jnsdev.com"
    needs: build
    steps:
      - name: Push to Docker Hub Container Registry
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/booklabs:latest
#          docker tag ${{ secrets.DOCKER_USERNAME }}/booklabs:latest ${{ secrets.DOCKER_USERNAME }}/booklabs:${{ github.run_id }}

      - name: Run a one-line script
        run: echo Deploy em prod.